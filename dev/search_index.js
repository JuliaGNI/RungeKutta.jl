var documenterSearchIndex = {"docs":
[{"location":"radauIA/#Radau-IA-Runge-Kutta-Methods","page":"Radau IA Methods","title":"Radau-IA Runge-Kutta Methods","text":"","category":"section"},{"location":"radauIA/","page":"Radau IA Methods","title":"Radau IA Methods","text":"Runge-Kutta Tableau RadauIA(2) with 2 stages and order 4:","category":"page"},{"location":"radauIA/","page":"Radau IA Methods","title":"Radau IA Methods","text":"  beginarrayrrr\n    0  frac14  - frac14 \n    frac23  frac14  frac512 hline\n      frac14  frac34 \n  endarray","category":"page"},{"location":"radauIA/","page":"Radau IA Methods","title":"Radau IA Methods","text":"Runge-Kutta Tableau RadauIA(3) with 3 stages and order 6:","category":"page"},{"location":"radauIA/","page":"Radau IA Methods","title":"Radau IA Methods","text":"  beginarrayrrrr\n    0  frac19  - fracsqrt618 - frac118  - frac118 + fracsqrt618 \n    frac35 - fracsqrt610  frac19  frac7 sqrt6360 + frac1145  frac1145 - frac43 sqrt6360 \n    fracsqrt610 + frac35  frac19  frac1145 + frac43 sqrt6360  frac1145 - frac7 sqrt6360 hline\n      frac19  fracsqrt636 + frac49  frac49 - fracsqrt636 \n  endarray","category":"page"},{"location":"rungekutta/#Runge-Kutta-Methods","page":"Runge-Kutta Methods","title":"Runge-Kutta Methods","text":"","category":"section"},{"location":"diagnostics/#Diagnostics","page":"Diagnostics","title":"Diagnostics","text":"","category":"section"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"Currently, diagnostic functions for checking symmetry, symplecticity and the so-called simplifying assumptions are implemented:","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"issymmetric(tab)\nissymplectic(tab)\nsatisfies_simplifying_assumption_b(tab, σ=tab.s)\nsatisfies_simplifying_assumption_c(tab, σ=tab.s)\nsatisfies_simplifying_assumption_d(tab, σ=tab.s)","category":"page"},{"location":"diagnostics/","page":"Diagnostics","title":"Diagnostics","text":"This list is expected to grow in the near future.","category":"page"},{"location":"library/","page":"Library","title":"Library","text":"CurrentModule = RungeKutta","category":"page"},{"location":"library/#Runge-Kutta-Library-Functions","page":"Library","title":"Runge Kutta Library Functions","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [RungeKutta]","category":"page"},{"location":"library/#RungeKutta.Tableau","page":"Library","title":"RungeKutta.Tableau","text":"Holds the tableau of a Runge-Kutta method.\n\n\n\n\n\n","category":"type"},{"location":"library/#Base.show-Tuple{IO,MIME{Symbol(\"text/markdown\")},Tableau}","page":"Library","title":"Base.show","text":"Markdown-print Runge-Kutta tableau.\n\n\n\n\n\n","category":"method"},{"location":"library/#Base.show-Tuple{IO,Tableau}","page":"Library","title":"Base.show","text":"Pretty-print Runge-Kutta tableau.\n\n\n\n\n\n","category":"method"},{"location":"library/#RungeKutta.TableauCrankNicolson","page":"Library","title":"RungeKutta.TableauCrankNicolson","text":"Tableau of Crank-Nicolson two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauCrouzeix","page":"Library","title":"RungeKutta.TableauCrouzeix","text":"Tableau of Crouzeix's two-stage, 3rd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauExplicitEuler","page":"Library","title":"RungeKutta.TableauExplicitEuler","text":"Tableau of one-stage, 1st order explicit (forward) Euler method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauExplicitMidpoint","page":"Library","title":"RungeKutta.TableauExplicitMidpoint","text":"Tableau of explicit two-stage, 2nd order midpoint method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauGauss","page":"Library","title":"RungeKutta.TableauGauss","text":"Gauss tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauHeun2","page":"Library","title":"RungeKutta.TableauHeun2","text":"Tableau of Heun's two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauHeun3","page":"Library","title":"RungeKutta.TableauHeun3","text":"Tableau of Heun's three-stage, 3rd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauImplicitEuler","page":"Library","title":"RungeKutta.TableauImplicitEuler","text":"Tableau of one-stage, 1st order implicit (backward) Euler method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauImplicitMidpoint","page":"Library","title":"RungeKutta.TableauImplicitMidpoint","text":"Tableau of two-stage, 2nd order implicit midpoint method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauKraaijevangerSpijker","page":"Library","title":"RungeKutta.TableauKraaijevangerSpijker","text":"Tableau of Kraaijevanger and Spijker's two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauKutta","page":"Library","title":"RungeKutta.TableauKutta","text":"Tableau of Kutta's three-stage, 3rd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIA","page":"Library","title":"RungeKutta.TableauLobattoIIIA","text":"Lobatto IIIA tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIB","page":"Library","title":"RungeKutta.TableauLobattoIIIB","text":"Lobatto IIIB tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIC","page":"Library","title":"RungeKutta.TableauLobattoIIIC","text":"Lobatto IIIC tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIC̄","page":"Library","title":"RungeKutta.TableauLobattoIIIC̄","text":"Lobatto IIIC̄ tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIID","page":"Library","title":"RungeKutta.TableauLobattoIIID","text":"Lobatto IIID tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIE","page":"Library","title":"RungeKutta.TableauLobattoIIIE","text":"Lobatto IIIE tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIF","page":"Library","title":"RungeKutta.TableauLobattoIIIF","text":"Lobatto IIIF tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauLobattoIIIG","page":"Library","title":"RungeKutta.TableauLobattoIIIG","text":"Lobatto IIIG tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauQinZhang","page":"Library","title":"RungeKutta.TableauQinZhang","text":"Tableau of Qin and Zhang's symplectic two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRK416","page":"Library","title":"RungeKutta.TableauRK416","text":"Tableau of explicit Runge-Kutta method of order four (1/6 rule)\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRK438","page":"Library","title":"RungeKutta.TableauRK438","text":"Tableau of explicit Runge-Kutta method of order four (3/8 rule)\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRadauIA","page":"Library","title":"RungeKutta.TableauRadauIA","text":"Radau IA tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRadauIIA","page":"Library","title":"RungeKutta.TableauRadauIIA","text":"Radau IIA tableau with s stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRalston2","page":"Library","title":"RungeKutta.TableauRalston2","text":"Tableau of Ralston's two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRalston3","page":"Library","title":"RungeKutta.TableauRalston3","text":"Tableau of Ralston's three-stage, 3rd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauRunge","page":"Library","title":"RungeKutta.TableauRunge","text":"Tableau of Runge's two-stage, 2nd order method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauSRK3","page":"Library","title":"RungeKutta.TableauSRK3","text":"Tableau of symmetric and symplectic three-stage, 4th order Runge-Kutta method\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.TableauSSPRK3","page":"Library","title":"RungeKutta.TableauSSPRK3","text":"Tableau of 3rd order Strong Stability Preserving method with three stages\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_gauss_coefficients","page":"Library","title":"RungeKutta.get_gauss_coefficients","text":"The Gauss coefficients are implicitly given by the so-called simplifying assumption C(s):\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_gauss_nodes","page":"Library","title":"RungeKutta.get_gauss_nodes","text":"The Gauss nodes are given by the roots of the shifted Legendre polynomial P_s (2x-1) with s the number of stages.\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_gauss_weights","page":"Library","title":"RungeKutta.get_gauss_weights","text":"The Gauss weights are given by the following integrals\n\nb_i = bigg( fracdPdx (c_i) bigg)^-2 int limits_0^1 bigg( fracP(x)x - c_i bigg)^2 dx \n\nwhere P(x) denotes the shifted Legendre polynomial P(x) = P_s (2x-1) with s the number of stages.\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_coefficients_a","page":"Library","title":"RungeKutta.get_lobatto_coefficients_a","text":"The Lobatto IIIA coefficients are implicitly given by the so-called simplifying assumption C(s):\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_coefficients_b","page":"Library","title":"RungeKutta.get_lobatto_coefficients_b","text":"The Lobatto IIIB coefficients are implicitly given by the so-called simplifying assumption D(s):\n\nsum limits_i=1^s b_i c_i^k-1 a_ij = fracb_jk ( 1 - c_j^k)  qquad j = 1      s   k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_coefficients_c","page":"Library","title":"RungeKutta.get_lobatto_coefficients_c","text":"The Lobatto IIIC coefficients are determined by setting a_i1 = b_1 and solving the so-called simplifying assumption C(s-1), given by\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s-1 \n\nfor a_ij with i = 1  s and j = 2  s.\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_coefficients_c̄","page":"Library","title":"RungeKutta.get_lobatto_coefficients_c̄","text":"The Lobatto IIIC̄ coefficients are determined by setting a_is = 0 and solving the so-called simplifying assumption C(s-1), given by\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s-1 \n\nfor a_ij with i = 1  s and j = 1  s-1.\n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_nodes","page":"Library","title":"RungeKutta.get_lobatto_nodes","text":"The s-stage Lobatto nodes are defined as the roots of the following polynomial of degree s:\n\nfracd^s-2dx^s-2 big( (x - x^2)^s-1 big) \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_lobatto_weights","page":"Library","title":"RungeKutta.get_lobatto_weights","text":"The Lobatto weights can be explicitly computed by the formula\n\nb_j = frac1s (s-1) P_s-1(2 c_j - 1)^2 qquad j = 1      s \n\nwhere P_k is the kth Legendre polynomial, given by\n\nP_k (x) = frac1k 2^k big( fracd^kdx^k (x^2 - 1)^k big) \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_1_coefficients","page":"Library","title":"RungeKutta.get_radau_1_coefficients","text":"The Radau IA coefficients are implicitly given by the so-called simplifying assumption D(s):\n\nsum limits_i=1^s b_i c_i^k-1 a_ij = fracb_jk ( 1 - c_j^k)  qquad j = 1      s   k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_1_nodes","page":"Library","title":"RungeKutta.get_radau_1_nodes","text":"The s-stage Radau IA nodes are defined as the roots of the following polynomial of degree s:\n\nfracd^s-1dx^s-1 big( x^s (x - 1)^s-1 big) \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_1_weights","page":"Library","title":"RungeKutta.get_radau_1_weights","text":"The Radau IA weights are implicitly given by the so-called simplifying assumption B(s):\n\nsum limits_j=1^s b_j c_j^k-1 = frac1k  qquad k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_2_coefficients","page":"Library","title":"RungeKutta.get_radau_2_coefficients","text":"The Radau IIA coefficients are implicitly given by the so-called simplifying assumption C(s):\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_2_nodes","page":"Library","title":"RungeKutta.get_radau_2_nodes","text":"The s-stage Radau IIA nodes are defined as the roots of the following polynomial of degree s:\n\nfracd^s-1dx^s-1 big( x^s-1 (x - 1)^s big) \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.get_radau_2_weights","page":"Library","title":"RungeKutta.get_radau_2_weights","text":"The Radau IIA weights are implicitly given by the so-called simplifying assumption B(s):\n\nsum limits_j=1^s b_j c_j^k-1 = frac1k  qquad k = 1      s \n\n\n\n\n\n","category":"function"},{"location":"library/#RungeKutta.solve_simplifying_assumption_b-Union{Tuple{AbstractArray{T,1}}, Tuple{T}} where T","page":"Library","title":"RungeKutta.solve_simplifying_assumption_b","text":"Compute the weights by solving the simplifying assumption B(s):\n\nsum limits_j=1^s b_j c_j^k-1 = frac1k  qquad k = 1      s \n\n\n\n\n\n","category":"method"},{"location":"library/#RungeKutta.solve_simplifying_assumption_c-Union{Tuple{AbstractArray{T,1}}, Tuple{T}} where T","page":"Library","title":"RungeKutta.solve_simplifying_assumption_c","text":"Compute the coefficients by solving the simplifying assumption C(s):\n\nsum limits_j=1^s a_ij c_j^k-1 = fracc_i^kk  qquad i = 1      s   k = 1      s \n\n\n\n\n\n","category":"method"},{"location":"library/#RungeKutta.solve_simplifying_assumption_d-Union{Tuple{T}, Tuple{AbstractArray{T,1},AbstractArray{T,1}}} where T","page":"Library","title":"RungeKutta.solve_simplifying_assumption_d","text":"Compute the coefficients by solving the simplifying assumption D(s):\n\nsum limits_i=1^s b_i c_i^k-1 a_ij = fracb_jk ( 1 - c_j^k)  qquad j = 1      s   k = 1      s \n\n\n\n\n\n","category":"method"},{"location":"tableau/#Tableaus","page":"Tableau","title":"Tableaus","text":"","category":"section"},{"location":"tableau/","page":"Tableau","title":"Tableau","text":"If required, it is straight-forward to create a custom tableau. The tableau of Heun's method, for example, is defined as follows:","category":"page"},{"location":"tableau/","page":"Tableau","title":"Tableau","text":"a = [[0.0  0.0]\n     [1.0  0.0]]\nb =  [0.5, 0.5]\nc =  [0.0, 1.0]\no = 2\n\ntab = Tableau(:heun, o, a, b, c)","category":"page"},{"location":"gauss/#Gauss-Legendre-Runge-Kutta-Methods","page":"Gauß Methods","title":"Gauss-Legendre Runge-Kutta Methods","text":"","category":"section"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"Runge-Kutta Tableau Gauss(1) with 1 stages and order 2:","category":"page"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"  beginarrayrr\n    frac12  frac12 hline\n      1 \n  endarray","category":"page"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"Runge-Kutta Tableau Gauss(2) with 2 stages and order 4:","category":"page"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"  beginarrayrrr\n    frac12 - fracsqrt36  frac14  frac14 - fracsqrt36 \n    fracsqrt36 + frac12  frac14 + fracsqrt36  frac14 hline\n      frac12  frac12 \n  endarray","category":"page"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"Runge-Kutta Tableau Gauss(3) with 3 stages and order 6:","category":"page"},{"location":"gauss/","page":"Gauß Methods","title":"Gauß Methods","text":"  beginarrayrrrr\n    frac12 - fracsqrt1510  frac536  frac29 - fracsqrt1515  frac536 - fracsqrt1530 \n    frac12  frac536 + fracsqrt1524  frac29  frac536 - fracsqrt1524 \n    fracsqrt1510 + frac12  fracsqrt1530 + frac536  frac29 + fracsqrt1515  frac536 hline\n      frac518  frac49  frac518 \n  endarray","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = RungeKutta","category":"page"},{"location":"#Runge-Kutta","page":"Home","title":"Runge Kutta","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Coverage)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package collects Runge-Kutta tableaus and provides diagnostics to analyze them. It implements algorithms for the computation of Gauss, Lobatto and Radau tableaus with arbitrary numbers of stages as well as tabulated coefficients for various explicit, diagonally implicit and fully implicit methods. All tableaus can be retrieved in arbitrary precision.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"RungeKutta.jl and all of its dependencies can be installed via the Julia REPL by typing ","category":"page"},{"location":"","page":"Home","title":"Home","text":"]add https://github.com/JuliaGNI/RungeKutta.jl","category":"page"},{"location":"#Basic-Usage","page":"Home","title":"Basic Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"After loading the Runge-Kutta module by","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using RungeKutta","category":"page"},{"location":"","page":"Home","title":"Home","text":"a Tableau can be created by calling any one of the provided constructors, for example","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> TableauExplicitMidpoint()\n\nRunge-Kutta Tableau explicit_midpoint with 2 stages and order 2:\n\n 0.0 │ 0.0  0.0\n 0.5 │ 0.5  0.0\n─────┼──────────\n     │ 0.0  1.0","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Tableau type has the following fields","category":"page"},{"location":"","page":"Home","title":"Home","text":"name is a descriptive name of the tableau,\no the order of the method,\ns the number of stages,\na the coefficients,\nb the weights,\nc the nodes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following tableaus are implemented (prepend Tableau to the name to call the respective constructor):","category":"page"},{"location":"","page":"Home","title":"Home","text":"explicit: ExplicitEuler/ForwardEuler, ExplicitMidpoint, Heun2, Heun3, Ralston2, Ralston3, Runge/Runge2, Kutta/Kutta3, RK4/RK416, RK438, SSPRK3\ndiagonally implicit: KraaijevangerSpijker, QinZhang, Crouzeix\nfully implicit: ImplicitEuler/BackwardEuler, ImplicitMidpoint, CrankNicolson, SRK3","category":"page"},{"location":"","page":"Home","title":"Home","text":"In addition there exist functions to compute Gauss, Lobatto and Radau tableaus with an arbitrary number of stages s:","category":"page"},{"location":"","page":"Home","title":"Home","text":"TableauGauss(s)\nTableauLobattoIIIA(s), TableauLobattoIIIB(s), TableauLobattoIIIC(s), TableauLobattoIIIC̄(s), TableauLobattoIIID(s), TableauLobattoIIIE(s), TableauLobattoIIIF(s), TableauLobattoIIIG(s)\nTableauRadauIA(s), TableauRadauIIA(s)","category":"page"},{"location":"","page":"Home","title":"Home","text":"All constructors take an optional type argument T, as in TableauExplicitMidpoint(T) or TableauGauss(s,T). The default type is Float64, but it can be set to other number types if needed, e.g., to Float32 for single precision or to the Dec128 type from DecFP.jl for quadruple precision. Internally, all tableaus are computed using BigFloat, providing high-accuracy coefficients as they are required for simulations in quadruple or higher precision. The internal precision can be set via setprecision(40), cf. the Julia Manual on Arbitrary Precision Arithmetic.","category":"page"},{"location":"lobatto/#Lobatto-III-Runge-Kutta-Methods","page":"Lobatto III Methods","title":"Lobatto III Runge-Kutta Methods","text":"","category":"section"},{"location":"radauIIA/#Radau-IIA-Runge-Kutta-Methods","page":"Radau IIA Methods","title":"Radau-IIA Runge-Kutta Methods","text":"","category":"section"},{"location":"radauIIA/","page":"Radau IIA Methods","title":"Radau IIA Methods","text":"Runge-Kutta Tableau RadauIIA(2) with 2 stages and order 4:","category":"page"},{"location":"radauIIA/","page":"Radau IIA Methods","title":"Radau IIA Methods","text":"  beginarrayrrr\n    frac13  frac512  - frac112 \n    1  frac34  frac14 hline\n      frac34  frac14 \n  endarray","category":"page"},{"location":"radauIIA/","page":"Radau IIA Methods","title":"Radau IIA Methods","text":"Runge-Kutta Tableau RadauIIA(3) with 3 stages and order 6:","category":"page"},{"location":"radauIIA/","page":"Radau IIA Methods","title":"Radau IIA Methods","text":"  beginarrayrrrr\n    frac25 - fracsqrt610  frac1145 - frac7 sqrt6360  frac37225 - frac169 sqrt61800  - frac2225 + fracsqrt675 \n    fracsqrt610 + frac25  frac37225 + frac169 sqrt61800  frac7 sqrt6360 + frac1145  - fracsqrt675 - frac2225 \n    1  frac49 - fracsqrt636  fracsqrt636 + frac49  frac19 hline\n      frac49 - fracsqrt636  fracsqrt636 + frac49  frac19 \n  endarray","category":"page"}]
}
